/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TaskBoardPageRouteImport } from './routes/taskBoardPage'
import { Route as SettingsPageRouteImport } from './routes/settingsPage'
import { Route as NotePageRouteImport } from './routes/notePage'
import { Route as ChatPageRouteImport } from './routes/chatPage'
import { Route as IndexRouteImport } from './routes/index'

const TaskBoardPageRoute = TaskBoardPageRouteImport.update({
  id: '/taskBoardPage',
  path: '/taskBoardPage',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsPageRoute = SettingsPageRouteImport.update({
  id: '/settingsPage',
  path: '/settingsPage',
  getParentRoute: () => rootRouteImport,
} as any)
const NotePageRoute = NotePageRouteImport.update({
  id: '/notePage',
  path: '/notePage',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatPageRoute = ChatPageRouteImport.update({
  id: '/chatPage',
  path: '/chatPage',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chatPage': typeof ChatPageRoute
  '/notePage': typeof NotePageRoute
  '/settingsPage': typeof SettingsPageRoute
  '/taskBoardPage': typeof TaskBoardPageRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chatPage': typeof ChatPageRoute
  '/notePage': typeof NotePageRoute
  '/settingsPage': typeof SettingsPageRoute
  '/taskBoardPage': typeof TaskBoardPageRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/chatPage': typeof ChatPageRoute
  '/notePage': typeof NotePageRoute
  '/settingsPage': typeof SettingsPageRoute
  '/taskBoardPage': typeof TaskBoardPageRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/chatPage'
    | '/notePage'
    | '/settingsPage'
    | '/taskBoardPage'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/chatPage' | '/notePage' | '/settingsPage' | '/taskBoardPage'
  id:
    | '__root__'
    | '/'
    | '/chatPage'
    | '/notePage'
    | '/settingsPage'
    | '/taskBoardPage'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChatPageRoute: typeof ChatPageRoute
  NotePageRoute: typeof NotePageRoute
  SettingsPageRoute: typeof SettingsPageRoute
  TaskBoardPageRoute: typeof TaskBoardPageRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/taskBoardPage': {
      id: '/taskBoardPage'
      path: '/taskBoardPage'
      fullPath: '/taskBoardPage'
      preLoaderRoute: typeof TaskBoardPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settingsPage': {
      id: '/settingsPage'
      path: '/settingsPage'
      fullPath: '/settingsPage'
      preLoaderRoute: typeof SettingsPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notePage': {
      id: '/notePage'
      path: '/notePage'
      fullPath: '/notePage'
      preLoaderRoute: typeof NotePageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chatPage': {
      id: '/chatPage'
      path: '/chatPage'
      fullPath: '/chatPage'
      preLoaderRoute: typeof ChatPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChatPageRoute: ChatPageRoute,
  NotePageRoute: NotePageRoute,
  SettingsPageRoute: SettingsPageRoute,
  TaskBoardPageRoute: TaskBoardPageRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
